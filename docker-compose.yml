version: "3.7"

services:
  api: &api
    build:
      context: .
      dockerfile: docker/dev/Dockerfile
    image: profmcdan/swift-jet
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./app:/app
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      - redis
      - db

  db:
    image: postgres:14.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    ports:
      - "5433:5432"

  redis:
    image: bitnami/redis:latest
    environment:
      - REDIS_PASSWORD=Admin!123
    ports:
      - "6379:6379"

  celery:
    <<: *api
    command: celery worker --app=core --loglevel=info --logfile=logs/celery.log
    ports: []
    volumes:
      - ./app:/app
    env_file:
      - ./.env
    depends_on:
      - redis
      - api

  celery-beat:
    <<: *api
    command: celery -A core beat -l info
    ports: []
    volumes:
      - ./app:/app
    env_file:
      - ./.env
    depends_on:
      - redis
      - celery

  dashboard:
    <<: *api
    command: flower -A core --port=5555 --broker=redis://redis:6379/0
    ports:
      - "5555:5555"
    env_file:
      - ./.env
    depends_on:
      - api
      - redis
      - celery

  locust-master:
    image: locustio/locust
    ports:
      - "8089:8089"
    volumes:
      - ./app:/app
    command: -f /app/locustfile.py --master -H http://localhost:8000
    depends_on:
      - api

  locust-worker:
    image: locustio/locust
    volumes:
      - ./app:/app/
    command: -f /app/locustfile.py --worker --master-host locust-master
    depends_on:
      - api

  prometheus:
    image: prom/prometheus:v2.14.0
    volumes:
      - prom_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  grafana:
    image: grafana/grafana:7.1.5-ubuntu
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    restart: unless-stopped
    ports:
      - "3001:3000"
    labels:
      org.label-schema.group: "monitoring"

volumes:
  postgres_data: ~
  grafana_data: {}
  prom_data: {}

